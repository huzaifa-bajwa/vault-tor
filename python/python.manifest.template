# Python3 manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "{{ python.stdlib }}/lib:/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"

loader.insecure__use_cmdline_argv = true

sys.enable_sigterm_injection = true

fs.mounts = [
  
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },

  { path = "{{ python.stdlib }}", uri = "file:{{ python.stdlib }}" },
  { path = "{{ python.distlib }}", uri = "file:{{ python.distlib }}" },

  { path = "/etc", uri = "file:/etc" },

  { type = "tmpfs", path = "/tmp" },
  { type = "tmpfs", path = "/scripts/assets" },

  { type = "encrypted", path = "/enclaveSecrets", uri = "file:secrets/", key_name = "_sgx_mrenclave" },

]

sgx.debug = true
sgx.nonpie_binary = true
sgx.enclave_size = "1024M"
sys.stack.size = "4M"
sgx.max_threads = 32

sgx.remote_attestation = 'epid'
sgx.ra_client_spid = "{{ env.get('RA_CLIENT_SPID', '') }}"
sgx.ra_client_linkable = {{ 'true' if env.get('RA_CLIENT_LINKABLE', '0') == '1' else 'false' }}

sgx.trusted_files = [

  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ python.stdlib }}/",
  "file:{{ python.distlib }}/",
  "file:/etc/mime.types",
  "file:/etc/default/apport",
  "file:/usr/lib/ssl/",

]

sgx.allowed_files = [


  "file:/etc/nsswitch.conf",
  "file:/etc/ethers",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",

  "file:scripts/",

  "file:/usr/lib/python3.8/ssl.py",
  
  "file:/usr/lib/python3.8/__pycache__/",
  "file:/usr/lib/python3.8/http/__pycache__/",
  "file:/usr/lib/python3.8/encodings/__pycache__/",
  "file:/usr/lib/python3.8/email/__pycache__/",
  "file:/usr/lib/python3.8/html/__pycache__/",
  "file:/usr/lib/python3.8/collections/__pycache__/",
  "file:/usr/lib/python3.8/urllib/__pycache__/",

  "file:/usr/lib/python3/dist-packages/__pycache__/",

  "file:/usr/local/lib/python3.8/dist-packages/",

  "file:/tmp/certificate.crt" ,
  "file:/tmp/privKey.key" ,

  "file:secrets/",
  "file:secrets/input.txt",
  
]


